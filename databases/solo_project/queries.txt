######################################################################
############################### RELEASE II ###############################
###########################################################################

1. Display the information in one table (either table is fine).

sqlite> SELECT * FROM employees;
1|John Smith|50000|true|1
2|Donald Drumpf|10000|false|2
3|Katy Perry|180000|false|1
4|Richard Hendrix|80000|true|2

2. Update an item that meets some condition (you can choose a condition that makes sense).

sqlite> UPDATE employees SET full_time="true" WHERE full_time="false";

sqlite> SELECT * FROM employees;

1|John Smith|50000|true|1
2|Donald Drumpf|10000|true|2
3|Katy Perry|180000|true|1
4|Richard Hendrix|80000|true|2

3. Display the information in both tables using one query.

sqlite> SELECT * FROM employees, departments WHERE employees.id = employees.id;
1|John Smith|50000|true|1|1|MidMarket Sales
2|Donald Drumpf|10000|true|2|2|B2B Sales
3|Katy Perry|180000|true|1|2|B2B Sales
4|Richard Hendrix|80000|true|2|2|B2B Sales

4. Display a narrower selection of columns (fewer columns than all of them, in other words) from both tables using one query.

sqlite> SELECT salary, full_time FROM employees, departments where employees.id = departments.id;
50000|true
10000|true

5. Delete an item that meets some condition (you can choose a condition that makes sense).

sqlite> DELETE FROM employees WHERE name="Donald Drumpf";
sqlite> SELECT * FROM employees;
1|John Smith|50000|true|1
3|Katy Perry|180000|true|1
4|Richard Hendrix|80000|true|2

###########################################################################
############################### RELEASE III ###############################
###########################################################################

##INNER JOIN (same as JOIN)##
-LEFT JOIN
-RIGHT JOIN
	SELECT column_name(s)
 	...> FROM table1
   	...> INNER JOIN table2
   	...> ON table1.column_name=table2.column_name;

##LEFT JOIN## - returns all rows from the left table (table1) with the matching rows in the right table (table2)

SELECT column_name(s)
FROM table1
LEFT JOIN table2
ON table1.column_name=table2.column_name;

##RIGHT JOIN## - returns all rows from the right table (table2) with the matching rows in the left table (table1)

SELECT column_name(s)
FROM table1
RIGHT JOIN table2
ON table1.column_name=table2.column_name;
